package org.globant.models;

import org.globant.database.ConfigDB;
import org.globant.entity.Customer;

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class CustomerModel {

    public Customer insert(Customer customer){
        //1. Open the connection
        Connection objConnection = ConfigDB.openConnection();

        try{
            //3. Write the SQL
            String sql = "INSERT INTO customers(name, email, phone, address) VALUES (?, ?, ?, ?)";

            //4.prepare the Statement, and Add the property RETURN_GENERATED_KEYS that returns the id generated by the database
            //After de insertion it returns the id of the database generated
            PreparedStatement objPrepare = objConnection.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);

            //5. values of ? ? ?
            objPrepare.setString(1, customer.getName());
            objPrepare.setString(2, customer.getEmail());
            objPrepare.setString(3, customer.getPhone());
            objPrepare.setString(4, customer.getAddress());

            //6. Execute the Query
            objPrepare.execute();

            //7. Obtain the result with its id(generated id)
            ResultSet objRest = objPrepare.getGeneratedKeys();

            //8. Loop while there is a register
            while(objRest.next()){
                customer.setId(objRest.getInt(1));
            }

            JOptionPane.showMessageDialog(null, "Customer insertion was successful");
        }catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        //Close the connection
        ConfigDB.closeConnection();
        return customer;
    }

    public List<Customer> findAll(){

        //1. Crete a list fr saving the return of the database
        List<Customer> customers = new ArrayList<>();

        //2.Open the connection
        Connection objConnection = ConfigDB.openConnection();

        try{
            //3.write the query in Sql
            String sql = "SELECT * FROM customers;";

            //4. Use the prepareStatement
            PreparedStatement objPrepare = objConnection.prepareStatement(sql);

            //5.Execute the query and obtain the result(ResultSet)

            ResultSet objResult = objPrepare.executeQuery();

            //6. while there is a result
            while(objResult.next()){

                //6.1 Create a user
                Customer customer = new Customer();

                customer.setId(objResult.getInt("id"));
                customer.setName(objResult.getString("name"));
                customer.setEmail(objResult.getString("email"));
                customer.setPhone(objResult.getString("phone"));
                customer.setAddress(objResult.getString("address"));

                customers.add(customer);

            }
        }catch (SQLException error){
            JOptionPane.showMessageDialog(null, error.getMessage());
        }
        ConfigDB.closeConnection();


        return customers;
    }
}
